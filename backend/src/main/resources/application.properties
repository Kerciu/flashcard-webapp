spring.application.name=flashcards-backend
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# mount docker secrets - now they are available as ${secret_name}
spring.config.import=optional:configtree:/run/secrets/

spring.datasource.url=jdbc:mysql://mysql_database:3306/my_database

#spring.datasource.username=here_insert_user_login
#spring.datasource.password=here_insert_db_password
spring.datasource.username=${db_user_login}
spring.datasource.password=${db_user_password}

spring.data.jdbc.dialect=mysql

# check if database schema is relevant to the entities
spring.jpa.hibernate.ddl-auto=validate
# avoid errors with jpa changing table names declared in @Table annotation
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.security.user.password=${SPRING_SECURITY_PASSWORD:root}
spring.security.user.name=${SPRING_SECURITY_LOGIN:root}

# oauth2 configurations
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:gitclientid}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:gitclientsecret}

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:gooogleclientid}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:googleclientsecret}

# jwt configurations
jwt.secret-key=${JWT_SECRET_KEY:jwtsecretkeylaksjdf;lasdkjdf;lkadsjf;lkjsad;lkfjasdjhfkjhkasjhdfkasjdhflkasjdhflkasjdhfkasjhdfklajshdflkjadshflkjdhaslkfjhadlksjfhaskjdhflkajdshfkjhaskdfjhkasjhdflkjahsdfkhaklsjfdhlaksjdhf}
jwt.token-valid-time=${JWT_TOKEN_VALID_TIME:3600000}

# sql logs for testsing
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true